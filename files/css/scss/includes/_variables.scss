/*---------------------------------
 [Colors]
-----------------------------------*/
$colors: (
	color-1:	#000,		// 1 - body Color
	color-2:	#FFF,		// 2 - body Background Color
	color-3:	#39B164,	// 3 - link Color
	color-4:	#99B139, 	// 4 - link hover color
	color-5:	#B18339,	// 5 - 
	color-6:	#B13939,	// 6 - 
	color-7:	#B1399E,	// 7 - 
	color-8:	#8839B1,	// 8 - 
	color-9:	#4839B1,	// 9 - 
	color-10:	#3996B1,	// 10 - 
	color-11:	#39B194,	// 11 - 
	color-12:	#39B163,	// 12 - 
	color-13:	#99B138,	// 13 - 
	color-14:	#B18338,	// 14 - 
	transp: #00000000 !important
);

$a-color:					map-get($colors, color-4);
$a-hover-color: 			map-get($colors, color-5);

$body-color:				map-get($colors, color-1);
$body-backgound_color:		map-get($colors, color-2);
$selection-color: 			map-get($colors, color-3);
$selection-backgound-color:	rgba(
	red(map-get($colors, color-4)),
	green(map-get($colors, color-4)),
	blue(map-get($colors, color-4)),
	0.5
);


/*---------------------------------
 [Spacing]
-----------------------------------*/
$spacers: (
	05 5px,
	06 6px,
	07 7px,
	08 8px,
	09 9px,
	10 10px,
	11 11px,
	12 12px,
	13 13px,
	14 14px,
	15 15px,
	16 16px,
	17 17px,
	18 18px,
	19 19px,
	20 20px,
	22 22px,
	25 25px,
	30 30px,
	32 32px,
	35 35px,
	40 40px,
	50 50px,
	60 60px,
	70 70px,
	80 80px,
	90 90px,
	100 100px,
	110 110px,
	120 120px,
	130 130px,
	140 140px,
	150 150px,
	200 200px,
	250 250px,
	300 300px,
	350 350px,
	400 400px,
	450 450px,
	500 500px,
) !default;


$text-columns: (
	0 0 0,
	2 2 30,
	3 3 30,
	4 4 30,
	5 5 30,
) !default;


/*---------------------------------
 [Typography]
-----------------------------------*/
$fontstyle-1: 'Sora', sans-serif;
$fontstyle-2: 'Sora', sans-serif;


$body-font:			 		$fontstyle-1;
$body-font-size:			16px;
$body-font-weight:			400;

// fs-{bp}-{size}
$fontsizes: (
	xxxxxs: 65%,
	xxxxs: 70%,
	xxxs: 75%,
	xxs: 80%,
	xs: 90%,
	s: 80%,
	m: $body_font_size,
	61: calc(1.325rem + .05vw),
	51: calc(1.325rem + .38vw),
	41: calc(1.325rem + .65vw),
	31: calc(1.325rem + 1.0vw),
	21: calc(1.325rem + 1.4vw),
	11: calc(1.325rem + 2.1vw),
) !default;

// line-height-{bp}-{size}
$line-heighters: (
	0: 0,
	1: 1,
	xxxs: 0.5,
	xxs: 0.9,
	xs: 1.2,
	s: 1.4,
	m: 1.6,
	l: 1.7,
	xl: 1.8,
	xxl: 2,
) !default;

$p-line-height:				map-get($line-heighters, l);

$h1-font-size-desktop:		2.8em;
$h2-font-size-desktop:		2.4em;
$h3-font-size-desktop: 		2.0em;
$h4-font-size-desktop: 		1.8em;
$h5-font-size-desktop: 		1.6em;
$h6-font-size-desktop: 		1.4em;
$h7-font-size-desktop: 		1.2em;

$h1-font-size-ipad-landscape:		2.6em;
$h2-font-size-ipad-landscape:		2.2em;
$h3-font-size-ipad-landscape: 		1.9em;
$h4-font-size-ipad-landscape: 		1.7em;
$h5-font-size-ipad-landscape: 		1.5em;
$h6-font-size-ipad-landscape: 		1.3em;
$h7-font-size-ipad-landscape: 		1.1em;

$h1-font-size-ipad-portrait:		2.4em;
$h2-font-size-ipad-portrait:		2.1em;
$h3-font-size-ipad-portrait: 		1.8em;
$h4-font-size-ipad-portrait: 		1.6em;
$h5-font-size-ipad-portrait: 		1.4em;
$h6-font-size-ipad-portrait: 		1.2em;
$h7-font-size-ipad-portrait: 		1.1em;

$h1-font-size-iphone-landscape:		2.2em;
$h2-font-size-iphone-landscape:		1.9em;
$h3-font-size-iphone-landscape: 	1.6em;
$h4-font-size-iphone-landscape: 	1.4em;
$h5-font-size-iphone-landscape: 	1.2em;
$h6-font-size-iphone-landscape: 	1.1em;
$h7-font-size-iphone-landscape: 	1.0em;

$h1-font-size-iphone-portrait:		2.0em;
$h2-font-size-iphone-portrait:		1.8em;
$h3-font-size-iphone-portrait: 		1.5em;
$h4-font-size-iphone-portrait: 		1.3em;
$h5-font-size-iphone-portrait: 		1.1em;
$h6-font-size-iphone-portrait: 		1.0em;
$h7-font-size-iphone-portrait: 		0.9em;



@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin box-shadow ($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow:    $string;
	box-shadow:         $string;
}


$breakpoints: (
	xs: 0,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px,
	xxl: 1400px
) !default;

@mixin breakpoint($bp, $rule: min-width) {
	@media (#{$rule}: map-get($breakpoints, $bp)) {
        @content;
    }
}