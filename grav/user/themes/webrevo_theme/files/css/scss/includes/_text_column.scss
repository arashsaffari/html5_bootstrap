

@mixin my_spaces($col_name, $col_value, $col_gap, $breakingpoint:'') {
	
	$bp: '';
	@if $breakingpoint != '' {
		$bp: '-#{$breakingpoint}';
	}

	.col-text#{$bp}-#{$col_name}   {
		-webkit-column-count: $col_value; /* Chrome, Safari, Opera */
		-moz-column-count: $col_value; /* Firefox */
		column-count: $col_value;
		-webkit-column-gap: #{$col_gap}px; /* Chrome, Safari, Opera */
		-moz-column-gap: #{$col_gap}px; /* Firefox */
		column-gap: #{$col_gap}px;
	}

}

@each $text_column in $text_columns {
	$col_name:	nth($text_column, 1);
	$col_value: nth($text_column, 2);
	$col_gap: 	nth($text_column, 3);

	@include my_spaces($col_name, $col_value, $col_gap, '');
}
	
@include breakpoint(sm) {
	@each $text_column in $text_columns {
		$col_name:	nth($text_column, 1);
		$col_value: nth($text_column, 2);
		$col_gap: 	nth($text_column, 3);
		@include my_spaces($col_name, $col_value, $col_gap, 'sm');
	}
}

@include breakpoint(md) {
	@each $text_column in $text_columns {
		$col_name:	nth($text_column, 1);
		$col_value: nth($text_column, 2);
		$col_gap: 	nth($text_column, 3);
		@include my_spaces($col_name, $col_value, $col_gap, 'md');
	}
}

@include breakpoint(lg) {
	@each $text_column in $text_columns {
		$col_name:	nth($text_column, 1);
		$col_value: nth($text_column, 2);
		$col_gap: 	nth($text_column, 3);
		@include my_spaces($col_name, $col_value, $col_gap, 'lg');
	}
}

@include breakpoint(xl) {
	@each $text_column in $text_columns {
		$col_name:	nth($text_column, 1);
		$col_value: nth($text_column, 2);
		$col_gap: 	nth($text_column, 3);
		@include my_spaces($col_name, $col_value, $col_gap, 'xl');
	}
}